#!/usr/bin/env node

var adj = [
  'nefarious', 'blue', 'yellow', 'orange', 'green', 'fushia', 'flowing',
  'quick', 'slow', 'ostentatious', 'hyperactive', 'massive', 'hipster',
  'autumnal', 'hidden', 'bitter', 'misty', 'silent', 'empty', 'dry', 'dark',
  'summer', 'icy', 'delicate', 'quiet', 'white', 'cool', 'spring', 'winter',
  'patient', 'twilight', 'dawn', 'crimson', 'wispy', 'weathered', 'blue',
  'billowing', 'broken', 'cold', 'damp', 'falling', 'frosted', 'green',
  'long', 'late', 'lingering', 'bold', 'little', 'morning', 'muddy', 'old',
  'red', 'rough', 'still', 'small', 'sparkling', 'throbbing', 'shy',
  'wandering', 'withered', 'wild', 'black', 'young', 'holy', 'solitary',
  'fragrant', 'aged', 'snowy', 'proud', 'floral', 'restless', 'divine',
  'polished', 'ancient', 'purple', 'lively', 'nameless', 'baroque',
  'suffering', 'stifling', 'smothering', 'shapeless', 'formless', 'gathering',
  'sensuous', 'stuttering', 'flickering', 'unstoppable', 'spectacular'
];

var noun = [
  'mountain', 'ocean', 'river', 'hill', 'grass', 'beach', 'narwhal', 'nymph',
  'shark', 'squid', 'octopus', 'mist', 'storm', 'winter',
  'waterfall', 'river', 'breeze', 'moon', 'rain', 'wind', 'sea', 'morning',
  'snow', 'lake', 'sunset', 'pine', 'shadow', 'leaf', 'dawn', 'glitter',
  'forest', 'hill', 'cloud', 'meadow', 'sun', 'glade', 'bird', 'brook',
  'butterfly', 'bush', 'dew', 'dust', 'field', 'fire', 'flower', 'firefly',
  'feather', 'grass', 'haze', 'mountain', 'night', 'pond', 'darkness',
  'snowflake', 'silence', 'sound', 'sky', 'shape', 'surf', 'thunder',
  'violet', 'water', 'wildflower', 'wave', 'water', 'resonance', 'sun',
  'wood', 'dream', 'cherry', 'tree', 'fog', 'frost', 'voice', 'paper',
  'frog', 'smoke', 'star', 'branch', 'lavender', 'shade', 'ninja', 'samurai',
  'fury', 'biscuit'
];

var ri = function (arr) {
  return Math.floor(Math.random() * arr.length);
};

var generate = module.exports = function (adjs) {
  adjs = adjs || 1;
  var prefix = '',
      copyAdj = [].slice.call(adj);
  while (adjs-- && copyAdj.length) {
    var i = ri(copyAdj);
    prefix += copyAdj[i] + '-';
    copyAdj.splice(i, 1);
  }
  return prefix + noun[ri(noun)];
};

if (require.main === module) {
  console.log(generate(parseInt(process.argv[2], 10)));
}